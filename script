local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()

local Window = Library:CreateWindow{
    Title = `Fluent {Library.Version}`,
    SubTitle = "by Actual Master Oogway",
    TabWidth = 160,
    Size = UDim2.fromOffset(830, 525),
    Resize = true,
    MinSize = Vector2.new(470, 380),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl
}

local Tabs = {
    Main = Window:CreateTab{
        Title = "Main",
        Icon = "phosphor-users-bold"
    },
    Settings = Window:CreateTab{
        Title = "Settings",
        Icon = "settings"
    },
    Fly = Window:CreateTab{
        Title = "Fly",
        Icon = "feather-airplay"
    }
}

local Options = Library.Options

-- Fly Function
local flying = false
local flySpeed = 50
local flyKeybind = Enum.KeyCode.F

local function fly()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")

    if not humanoid or not rootPart then return end

    flying = not flying

    if flying then
        local bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.MaxForce = Vector3.new(0, 0, 0)
        bodyVelocity.Parent = rootPart

        while flying and humanoid and rootPart do
            local direction = Vector3.new()

            if userInputService:IsKeyDown(Enum.KeyCode.W) then
                direction = direction + rootPart.CFrame.LookVector
            end
            if userInputService:IsKeyDown(Enum.KeyCode.S) then
                direction = direction - rootPart.CFrame.LookVector
            end
            if userInputService:IsKeyDown(Enum.KeyCode.A) then
                direction = direction - rootPart.CFrame.RightVector
            end
            if userInputService:IsKeyDown(Enum.KeyCode.D) then
                direction = direction + rootPart.CFrame.RightVector
            end
            if userInputService:IsKeyDown(Enum.KeyCode.Space) then
                direction = direction + Vector3.new(0, 1, 0)
            end
            if userInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                direction = direction - Vector3.new(0, 1, 0)
            end

            bodyVelocity.Velocity = direction * flySpeed
            wait()
        end

        bodyVelocity:Destroy()
    end
end

-- Fly Keybind
local FlyKeybind = Tabs.Fly:CreateKeybind("FlyKeybind", {
    Title = "Fly Keybind",
    Mode = "Toggle",
    Default = flyKeybind,
    Callback = function(Value)
        fly()
    end,
    ChangedCallback = function(New)
        flyKeybind = New
    end
})

-- Fly Speed Slider
local FlySpeedSlider = Tabs.Fly:CreateSlider("FlySpeed", {
    Title = "Fly Speed",
    Description = "Adjust the speed of flying",
    Default = flySpeed,
    Min = 10,
    Max = 100,
    Rounding = 1,
    Callback = function(Value)
        flySpeed = Value
    end
})

-- Fly Toggle
local FlyToggle = Tabs.Fly:CreateToggle("FlyToggle", {
    Title = "Enable Fly",
    Default = false,
    Callback = function(Value)
        if Value then
            fly()
        else
            flying = false
        end
    end
})

-- Addons:
SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes{}
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

Library:Notify{
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
}

SaveManager:LoadAutoloadConfig()
